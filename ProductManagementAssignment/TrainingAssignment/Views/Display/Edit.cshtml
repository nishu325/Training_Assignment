@model TrainingAssignment.Products

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <!-- Required meta tags -->
    <meta name="viewport" content="width=device-width" />
    <!--Bootstrap CSS-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <title>Edit Product</title>
</head>
<body>
    <!--Navbar-->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark navbar-fixed-top">
        <b class="main-heading" style="color:white; padding-right:15px;">Product Management</b>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Menu
                    </a>
                    <!--Dropdown menu for Add new product and display Product List-->
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="@Url.Action("AddProduct", "Display")">Add Product</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="@Url.Action("ProductList", "Display")">Product List</a>
                    </div>
                </li>
            </ul>

            <!--Logout Link-->
            <form class="form-inline my-2 my-lg-0">
                @Html.ActionLink("Log-out", "Login", "Authentication")
            </form>
        </div>
    </nav>

    <!--Notify user for perticular action-->
    @{ if (TempData["message"] != null)
        {
            <div class="alert alert-success alert-dismissible">
                <a href="/Display/AddProduct" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @TempData["message"]
            </div>
        }
    }

    <!--View of Edit any product details-->
    <div class="row justify-content-center mx-4 mt-4">
        <div class="col-sm-6 col-xs-6 col-md-4">

            @using (Html.BeginForm("Edit", "Display", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()<!--This is used for Security of website-->
                <div>
                    <p><b>Edit Product</b></p>
                    <hr style="border:groove" />

                    @Html.HiddenFor(m => m.Id)
                </div>
                <table class="table table-bordered">

                    <tbody>
                        <tr>
                            <!--Input for product name-->
                            <td> <b> @Html.LabelFor(m => m.Name, "Product Name")</b></td>
                            <td>
                                @Html.EditorFor(m => m.Name, "Product Name", new { @class = "form-control", @placeholder = "Product Name" })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "badge badge-danger" })
                            </td>
                        </tr>
                        <tr>
                            <!--Input for product category-->
                            <td> <b>@Html.LabelFor(m => m.Category, "Category")</b></td>
                            <td>
                                @Html.DropDownListFor(m => m.Category, new SelectList(new[] { "Mobile", "Laptop", "Eaphone", "Charger" }), "Select Category", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.Category, "", new { @class = "badge badge-danger" })

                            </td>
                        </tr>
                        <tr>
                            <!--Input for product price-->
                            <td> <b>@Html.LabelFor(m => m.Price, "Price")</b></td>
                            <td>
                                @Html.EditorFor(m => m.Price, new { @class = "form-control", @placeholder = "Price" })
                                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "badge badge-danger" })

                            </td>
                        </tr>

                        <tr>
                            <!--Input for product quantity-->
                            <td> <b>@Html.LabelFor(m => m.Quantity, "Quantity")</b></td>
                            <td>
                                @Html.DropDownListFor(m => m.Quantity, new SelectList(new[] { "1", "2", "3", "4", "5" }), "Select Quantity", new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "badge badge-danger" })

                            </td>
                        </tr>

                        <tr>
                            <!--Input for short description-->
                            <td> <b>@Html.LabelFor(m => m.ShortDesc, "Short Description")</b></td>
                            <td>
                                @Html.TextAreaFor(m => m.ShortDesc, new { @class = "form-control", @placeholder = "Short Description" })
                                @Html.ValidationMessageFor(m => m.ShortDesc, "", new { @class = "badge badge-danger" })
                            </td>
                        </tr>

                        <tr>
                            <!--Input for long description-->
                            <td> <b>@Html.LabelFor(m => m.LongDesc, "Long Description")</b></td>
                            <td>
                                @Html.TextAreaFor(m => m.LongDesc, new { @class = "form-control", @placeholder = "Long Description" })
                                @Html.ValidationMessageFor(m => m.LongDesc, "", new { @class = "badge badge-danger" })
                            </td>
                        </tr>

                        <tr>
                            <!--Selecting small image-->
                            <td>  <b> @Html.LabelFor(m => m.SmallImage, "Small Image")</b></td>
                            <td>
                                <img src="@Url.Content(Session["smallImage"].ToString())" width="50" height="50" alt="product" />
                                <input type="file" name="smallImage" />
                                @Html.ValidationMessageFor(m => m.SmallImage, "", new { @class = "badge badge-danger", accept = "image/jpeg,  image/jpg" })
                                <!--Warn to user for error in image selection-->
                                @{ if (ViewBag.simage != null)
                                    {
                                        <p style="color:red">@ViewBag.simage</p>
                                    }
                                }
                                <p class="text-danger">@ViewBag.simage_err</p>
                            </td>
                        </tr>

                        <tr>
                            <!--Selecting large image-->
                            <td> <b> @Html.LabelFor(m => m.LargeImage, "Large Image")</b></td>
                            <td>
                                <img src="@Url.Content(Session["largeImage"].ToString())" width="50" height="50" alt="product" />
                                <input type="file" name="largeImage" />
                                @Html.ValidationMessageFor(m => m.LargeImage, "", new { @class = "badge badge-danger", accept = "image/jpeg,  image/jpg" })
                                <!--Warn to user for error in image selection-->
                                @{
                                    if (ViewBag.limage != null)
                                    {
                                        <p style="color:red">@ViewBag.limage</p>
                                    }
                                }
                                <p class="text-danger">@ViewBag.simage_err</p>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <!--Button for Update product details-->
                <div class="form-group justify-content-center">
                    <input type="submit" name="submit" class="btn btn-primary btn-block" value="Update Details" />
                </div>

            }
        </div>
    </div>
    <!--Scripts-->

    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>

</body>
</html>